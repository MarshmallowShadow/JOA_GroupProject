<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="record">

	<!-- 기록 추가하기 -->
	<insert id="insert" parameterType="recVo">
		<selectKey keyProperty="recordNo" resultType="int" order="BEFORE">
			select SEQ_RECORD_NO.nextval from dual
		</selectKey>
		
		<![CDATA[
			insert into record
			values (#{recordNo}, #{courseNo}, #{userNo}, #{review}, #{weather}, #{temperature}, #{courseCate}, #{courseTime}, #{difficulty}, to_date(#{regDate}, 'yyyy-mm-dd hh24:mi'))
		]]>
	</insert>
	
	<!-- 기록번호 가져오기 -->
	<select id="getrecNo" resultType="int">
		<![CDATA[
			select last_number
			from user_sequences
			where sequence_name = 'SEQ_RECORD_NO'
		]]>
	</select>
	
	<!-- 기록수 가져오기 -->
	<select id="recCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(*)
			from record
			where course_no = #{courseNo}
		]]>
	</select>
	
	<!-- 기록리스트 가져오기 -->
	<select id="getRecList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			select  record_no recordNo
			        , course_no courseNo
			        , r.user_no userNo
			        , name
			        , review
			        , weather
			        , temperature
			        , course_category courseCate
			        , course_time courseTime
			        , difficulty
			        , to_char(reg_date, 'YY.MM.DD HH24:Mi') regDate
			        
			from record r, users u
			where r.user_no = u.user_no
			and course_no = #{courseNo}
		]]>
		<if test="authUserNo != 0">
			and r.user_no = ${authUserNo}
		</if>
	</select>
	
	<!-- 기록 가져오기 -->
	<select id="getRec" parameterType="int" resultType="recVo">
		<![CDATA[
			select record_no recordNo
			        ,course_no courseNo
			        ,review
			        ,weather
			        ,temperature
			        ,course_category courseCate
			        ,course_time courseTime
			        ,difficulty
			        ,to_char(reg_date, 'YYYY-MM-DD HH24:Mi') regDate
			from record
			where record_no = #{recordNo}
		]]>
	</select>
	
	<!-- 기록 수정하기 -->
	<update id="update" parameterType="recVo">
		<![CDATA[
			update record
			set review = #{review}
				,weather = #{weather}
				,temperature = #{temperature}
				,course_category = #{courseCate}
				,course_time = #{courseTime}
				,difficulty = #{difficulty}
				,reg_date = to_date(#{regDate}, 'yyyy-mm-dd hh24:mi')
			where record_no = #{recordNo}
		]]>
	</update>
	
	
<!-- ************************************************************************************** -->	
	<!-- (차트통계) 산책 갯수 가져오기 -->
	<select id="getWalkCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(course_category)
			from record
			group by course_no, course_category
			having (course_no = #{courseNo}
			and course_category = 'walk')
		]]>
	</select>
	
	<!-- (차트통계) 조깅 갯수 가져오기 -->
	<select id="getJogCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(course_category)
			from record
			group by course_no, course_category
			having (course_no = #{courseNo}
			and course_category = 'jogging')
		]]>
	</select>
	
	<!-- (차트통계) 러닝 갯수 가져오기 -->
	<select id="getRunCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(course_category)
			from record
			group by course_no, course_category
			having (course_no = #{courseNo}
			and course_category = 'running')
		]]>
	</select>
	
	<!-- (차트통계) 마라톤 갯수 가져오기 -->
	<select id="getMaraCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(course_category)
			from record
			group by course_no, course_category
			having (course_no = #{courseNo}
			and course_category = 'marathon')
		]]>
	</select>
	
	<!-- (차트통계) 자전거 갯수 가져오기 -->
	<select id="getBicCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(course_category)
			from record
			group by course_no, course_category
			having (course_no = #{courseNo}
			and course_category = 'bicycle')
		]]>
	</select>
	
	<!-- (차트통계) 그림 갯수 가져오기 -->
	<select id="getDrawCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(course_category)
			from record
			group by course_no, course_category
			having (course_no = #{courseNo}
			and course_category = 'draw')
		]]>
	</select>
	
	<!-- (차트통계) 난이도-쉬움 갯수 가져오기 -->
	<select id="getEasyCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(difficulty)
			from record
			group by course_no, difficulty
			having (course_no = #{courseNo}
			and difficulty = 'easy')
		]]>
	</select>
	
	<!-- (차트통계) 난이도-보통 갯수 가져오기 -->
	<select id="getNormalCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(difficulty)
			from record
			group by course_no, difficulty
			having (course_no = #{courseNo}
			and difficulty = 'normal')
		]]>
	</select>
	
	<!-- (차트통계) 난이도-어려움 갯수 가져오기 -->
	<select id="getHardCnt" parameterType="int" resultType="int">
		<![CDATA[
			select  count(difficulty)
			from record
			group by course_no, difficulty
			having (course_no = #{courseNo}
			and difficulty = 'hard')
		]]>
	</select>
	
	
	
	<!-- **************************************김수빙************************************** -->
	<select id="getBestRecord" parameterType="int" resultType="String">
	<![CDATA[
		SELECT review 
		FROM (SELECT rownum rn, review
		        FROM (SELECT *
		                FROM record
		                WHERE course_no = #{course_no}
		                ORDER BY reg_date) re)
		where rn<=3
	]]>	
	</select>

</mapper>