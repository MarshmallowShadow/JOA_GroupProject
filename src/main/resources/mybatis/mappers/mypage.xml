<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypage">
	
	<!-- 쿼리문 작성 -->
	<resultMap id="resultMapCategoryVo" type="com.javaex.vo.CategoryVo">
		<result column="cate_no" property="cateNo" />
		<result column="user_no" property="userNo" />
		<result column="cate_name" property="cateName" />
	</resultMap>
	
	
	
	<!-- 마이페이지 - 좋아요 한 코스들 -->
	<select id="likedCoList" parameterType="int" resultType="map">
		<![CDATA[
			select  c.course_no courseNo,
        			c.user_no userNo,
        			c.title,
        			u.id,
        			to_char(c.reg_date, 'YYYY-MM-DD') regDate,
        			c.open_status openStatus,
                    lc.user_no liked,
                    fc.course_no favorite,
                    pc.count pcount,
                    i.saveName
            from users u,
            (select * from liked_course where user_no=#{userNo}) lc,
            course c 
            left outer join (select max(cate_no), course_no 
            				from (select fca.cate_no, course_no 
            						from favorite_course fco, favorite_category fca where fco.cate_no=fca.cate_no and user_no = #{userNo}) group by course_no) fc
            on c.course_no = fc.course_no
            left outer join (select count(*) count, course_no 
            				from (select course_no 
            						from board where board_category = 'post') group by course_no) pc
            on c.course_no = pc.course_no
            left outer join (SELECT save_name saveName, course_no
		                 FROM record_img i, record r, (SELECT MAX(reg_date) "ma" 
		                                                FROM record
		                                                GROUP BY course_no) d
		                where i.record_no = r.record_no
		                and order_no = 0                 
		                and r.reg_date = d."ma") i
            on i.course_no = c.course_no
            where c.user_no = u.user_no
            	and c.course_no = lc.course_no
                and lc.user_no = #{userNo}
        	order by c.reg_date desc
		]]>
	</select>
	
	
	
	
	
	
	
	
	
	
	
	<!-- 나의 기록보기 - 리스트 가져오기 -->
	<select id="getRecordList" parameterType="int" resultType="map">
		<![CDATA[
			select  r.record_no recordNo,
					r.course_no courseNo,
			        r.user_no userNo,
			        c.title,
			        r.review,
			        to_char(r.reg_date, 'YYYY-MM-DD HH24:MI') regDate1,
			        to_char(r.reg_date, 'YYYY-MM-DD') regDate2,
			        to_char(r.reg_date, 'YYYY-MM') regDate3,
			        i.save_name saveName
			from course c, record r 
			left outer join (select * from record_img where order_no = 0) i
			on r.record_no = i.record_no
			where r.course_no = c.course_no
				and r.user_no =  #{userNo}
			order by r.reg_date asc
		]]>
	</select>
	
	<!-- 나의 기록 보기 - 나의 기록 삭제하기 -->
	<delete id="deleteRecord" parameterType="int">
		<![CDATA[
			delete from record
			where record_no = #{recordNo}
		]]>
	</delete>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 나의 코스보기 - 리스트 가져오기 -->
	<select id="getCourseList" parameterType="int" resultType="map">
		<![CDATA[
			select  c.course_no courseNo,
        			c.user_no userNo,
        			c.title,
        			u.id,
        			to_char(c.reg_date, 'YYYY-MM-DD') regDate,
        			c.open_status openStatus,
                    lc.user_no liked,
                    fc.course_no favorite,
                    pc.count pcount,
                    i.saveName
            from users u,
            course c 
            left outer join (select * from liked_course where user_no=#{userNo}) lc
            on c.course_no = lc.course_no
            left outer join (select max(cate_no), course_no from (select fca.cate_no, course_no from favorite_course fco, favorite_category fca where fco.cate_no=fca.cate_no and user_no = #{userNo}) group by course_no) fc
            on c.course_no = fc.course_no
            left outer join (select count(*) count, course_no from (select course_no from board where board_category = 'post') group by course_no) pc
            on c.course_no = pc.course_no
            left outer join (SELECT save_name saveName, course_no
		                 FROM record_img i, record r, (SELECT MAX(reg_date) "ma" 
		                                                FROM record
		                                                GROUP BY course_no) d
		                where i.record_no = r.record_no
		                and order_no = 0                 
		                and r.reg_date = d."ma") i
            on i.course_no = c.course_no
            where c.user_no = u.user_no
                and c.user_no = #{userNo}
        	order by c.reg_date desc
		]]>
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 나의 즐겨찾기 - 메인리스트(전체) 가져오기 -->
	<select id="getFavAllList" parameterType="int" resultType="map">
		<![CDATA[
			select  c.course_no courseNo,
        			c.user_no userNo,
        			c.title,
        			u.id,
        			to_char(c.reg_date, 'YYYY-MM-DD') regDate,
        			c.open_status openStatus,
                    lc.user_no liked,
                    fc.course_no favorite,
                    pc.count pcount,
                    i.saveName
            from users u,
            (select max(cate_no), course_no from (select fca.cate_no, course_no from favorite_course fco, favorite_category fca where fco.cate_no=fca.cate_no and user_no = #{userNo}) group by course_no) fc,
            course c 
            left outer join (select * from liked_course where user_no=#{userNo}) lc
            on c.course_no = lc.course_no
            left outer join (select count(*) count, course_no from (select course_no from board where board_category = 'post') group by course_no) pc
            on c.course_no = pc.course_no
            left outer join (SELECT save_name saveName, course_no
		                 FROM record_img i, record r, (SELECT MAX(reg_date) "ma" 
		                                                FROM record
		                                                GROUP BY course_no) d
		                where i.record_no = r.record_no
		                and order_no = 0                 
		                and r.reg_date = d."ma") i
            on i.course_no = c.course_no
            where c.user_no = u.user_no
                and fc.course_no = c.course_no
        	order by c.reg_date desc
		]]>
	</select>
	
	
	
	<!-- 나의 즐겨찾기 - 개별리스트(카테고리별) 가져오기 -->
	<select id="getFavCourseList" parameterType="map" resultType="map">
		<![CDATA[
			select  c.course_no courseNo,
        			c.user_no userNo,
        			c.title,
        			u.id,
        			to_char(c.reg_date, 'YYYY-MM-DD') regDate,
        			c.open_status openStatus,
                    lc.user_no liked,
                    fc.course_no favorite,
                    cateName,
                    pc.count pcount,
                    i.saveName
            from users u,
            (select fca.cate_no, fca.cate_name cateName, course_no from favorite_course fco, favorite_category fca where fco.cate_no=fca.cate_no and user_no = #{userNo}) fc,
            course c 
            left outer join (select * from liked_course where user_no=#{userNo}) lc
            on c.course_no = lc.course_no
            left outer join (select count(*) count, course_no from (select course_no from board where board_category = 'post') group by course_no) pc
            on c.course_no = pc.course_no
            left outer join (SELECT save_name saveName, course_no
		                 FROM record_img i, record r, (SELECT MAX(reg_date) "ma" 
		                                                FROM record
		                                                GROUP BY course_no) d
		                where i.record_no = r.record_no
		                and order_no = 0                 
		                and r.reg_date = d."ma") i
            on i.course_no = c.course_no
            where c.user_no = u.user_no
            	and c.course_no = fc.course_no
                and fc.cate_no = #{cateNo}
        	order by c.reg_date desc
		]]>
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 카테고리-1.리스트 가져오기 -->
	<select id="getCategoryList" parameterType="int" resultType="CategoryVo">
		<![CDATA[
			select  cate_no cateNo,
			        user_no userNo,
			        cate_name cateName
			from favorite_category
			where user_no = #{userNo}
			order by cate_no asc
		]]>
	</select>
	
	<!-- 카테고리-2.카테고리 목록 추가하기 -->
	<insert id="insertCategory" parameterType="CategoryVo">
		<![CDATA[
			insert into favorite_category
			values(seq_cate_no.nextval, #{userNo}, #{cateName})
		]]>
	</insert>
	
	<!-- 카테고리-3.카테고리 목록 삭제하기 -->
	<delete id="deleteCategory" parameterType="int">
		<![CDATA[
			delete from favorite_category
			where cate_no = #{cateNo}
		]]>
	</delete>
	
	
	<!-- 카테고리-4.카테고리 수정 리스트 가져오기 -->
	<select id="getEditCateList" parameterType="int" resultType="CategoryVo">
		<![CDATA[
			select  cate_no cateNo,
			        user_no userNo,
			        cate_name cateName
			from favorite_category
			where cate_no = #{cateNo}
		]]>
	</select>
	
	
	<!-- 카테고리-5.카테고리 수정(업데이트) -->
	<update id="updateCate" parameterType="CategoryVo">
		<![CDATA[
			update favorite_category
			set cate_name = #{cateName}
			where cate_no = #{cateNo}
		]]>
	</update>
	
	
	
	
	
</mapper>