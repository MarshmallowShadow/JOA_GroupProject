<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="course">

	<!-- 코스 추가 -->
	<insert id="insert" parameterType="coVo">
		<selectKey keyProperty="courseNo" resultType="int" order="BEFORE">
			select SEQ_COURSE_NO.nextval from dual
		</selectKey>
		<![CDATA[
			insert into course
			values (#{courseNo}, #{userNo}, #{title}, #{distance}, #{courseCate}, #{courseTime}, #{difficulty}, sysdate, #{openStatus})
		]]>
	</insert>
	
	
	<!-- 코스 제목 수정 -->
	<update id="updateTitle" parameterType="map">
		<![CDATA[
			update course
			set title = #{modTitle}
			where course_no = #{courseNo}
		]]>
	</update>
	
	
	<!-- 코스 가져오기 -->
	<select id="selectCourse" resultType="coVo" parameterType="int">
		<![CDATA[
			select course_no courseNo
			        ,user_no userNo
			        ,title
			        ,distance
			        ,course_category courseCate
			        ,course_time courseTime
			        ,difficulty
			        ,to_char(reg_date, 'YYYY.MM.DD') regDate
			from course
			where course_no = #{courseNo}
		]]>
	</select>
	
	
	<!-- 기록작성자 번호 가져오기 -->
	<select id="getUserNo" resultType="int" parameterType="int">
		<![CDATA[
			select user_no
			from course
			where course_no = #{courseNo}
		]]>
	</select>
	
	<!-- 지역별 검색 -->
	<select id="locationList" parameterType="map" resultType="map">
	<![CDATA[
		select	c.course_no, title, distance, course_time, course_category, difficulty,
				id,
				x1, x2, y1, y2, max_order_no, min_order_no
		from course c, users u, 
				(select x1, x2, y1, y2, max_order_no, min_order_no, omax.course_no
                from(select x x2, y y2, p.course_no, p.order_no max_order_no 
                     from(select max(order_no) order_no, course_no from point p group by course_no) max,
                     point p where max.course_no = p.course_no and max.order_no = p.order_no) omax,
                    (select x x1, y y1, p.course_no, p.order_no min_order_no 
                     from(select min(order_no) order_no, course_no from point p group by course_no) min,
                     point p where min.course_no = p.course_no and min.order_no = p.order_no) omin
                where omax.course_no = omin.course_no) p
		where c.user_no = u.user_no
		and c.course_no = p.course_no
		and x > #{x} - 3
		and x < #{x} + 3
		and y > #{y} - 1
		and y < #{y} + 1
	]]>
	</select>
	
	<!-- 키워드별 검색 -->
	<select id="titleList" parameterType="map" resultType="map">
	<![CDATA[
		select	c.course_no, title, distance, course_time, course_category, difficulty,
				id,
				x1, x2, y1, y2, max_order_no, min_order_no
		from course c, users u, 
				(select x1, x2, y1, y2, max_order_no, min_order_no, omax.course_no
                from(select x x2, y y2, p.course_no, p.order_no max_order_no 
                     from(select max(order_no) order_no, course_no from point p group by course_no) max,
                     point p where max.course_no = p.course_no and max.order_no = p.order_no) omax,
                    (select x x1, y y1, p.course_no, p.order_no min_order_no 
                     from(select min(order_no) order_no, course_no from point p group by course_no) min,
                     point p where min.course_no = p.course_no and min.order_no = p.order_no) omin
                where omax.course_no = omin.course_no) p
		where c.user_no = u.user_no
		and c.course_no = p.course_no
		and keyword like '%#{keyword}%'
	]]>
	</select>
	
	
</mapper>